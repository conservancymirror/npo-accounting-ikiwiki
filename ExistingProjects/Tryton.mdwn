Tryton is a fork of [[OpenERP]]. A comparison of Tryton and OpenERP is available at [[!wikipedia Comparison_of_Tryton_and_Open_ERP]]. Another comparision can be found on <http://www.openerp2tryton.com/>

List of companies that offer services based on tryton: <http://www.tryton.org/services.html>

Based on a comunity with it's own foundation. <http://www.tryton.org/foundation/index.html>

Mailing Lists: 

- <https://groups.google.com/forum/#!forum/tryton> General discusion group
- <https://groups.google.com/forum/#!forum/tryton-dev> Technical discusion group

Links:

- [[!wikipedia Tryton]] - Wikipedia
- <http://www.tryton.org/> - Project homepage
- <http://hg.tryton.org> - Source code
- <http://www.ohloh.net/p/tryton>

## Technical

- Python for server
- Python/GTK+ for desktop client 
- Web client in development (Repo: <http://hg.tryton.org/sandbox/sao>  Demo: <https://demo.tryton.org:8000>(there is some issues with certificates))
- Application to manage user portals connected to erp. <http://openlabs.github.io/nereid/>
- Forked from [[OpenERP]] in 2008 -- [[!wikipedia Tryton#Origin_and_history]]
- Migrations from versions are full supported. 

## Preliminary evaluation

### Positive

- Documented modules
- Modular application, wide range of modules
  - Official modules: <http://hg.tryton.org/modules/>
  - Comunity modules available on bitbucket, see
    - <http://bitbucket.org/trytonspain>
    - <http://bitbucket.org/zikzakmedia>
    - <http://bitbucket.org/nantic>
    - <http://bitbucket.org/pokoli>  (and others).
    - Also avaiilable on pypy  <https://pypi.python.org/pypi?%3Aaction=search&term=tryton&submit=search>.
- Separated client and server presumably making collaboration easy
- Can create reports -- [[!wikipedia Tryton#Technical_features]]
- Using fixed point in Accouting. Decimal is used on server layer and numeric on the database layer. 

## [[UseCases/GeneratingReports]] Evaluation

### Positive
- Capable of Trial Balance and Chart of Accounts reports.
- Probably capable of Expense, Income reports with minor, semantic[report templates] development effort.
- Possible to create [custom reports](http://doc.tryton.org/3.0/trytond/doc/topics/reports/index.html)

### Negative
- Does not seem to support funds, thus it is not possible to generate reports for a specific fund.

### Examples
- Generated [[General_Ledger.odt]].

<a id="evaluation"></a>
## Evaluation

### Evaluation of [[Reporting|UseCases/GeneratingReports]] UseCases
- [[Trial Balance Report|UseCases/GeneratingReports#trial-balance]]: FIXME
- [[Bank Reconciliation Report|UseCases/GeneratingReports#bank-reconcilation]]: FIXME
- [[Chart of Accounts|UseCases/GeneratingReports#chart-of-accounts]]: FIXME
- [[Cash Disbursements Journal|UseCases/GeneratingReports#cash-disbursements]]: FIXME
- [[Income Report|UseCases/GeneratingReports#income-report]]: FIXME
- [[Expense Report|UseCases/GeneratingReports#expense-report]]: FIXME

### Evaluation of [[Reporting|UseCases/GeneratingReports]] UseCases for Fund Accounting

Can each of these reports be generated, confined to a specific temporarily
restricted asset type?

Tryton [does not support fund accounting](http://npoacct.sfconservancy.org/irclogs/%23npoacct.2013-11-11.log.html#t2013-11-11T16:35:54) as of now.

<!--
- [[Trial Balance Report|UseCases/GeneratingReports#trial-balance]]: FIXME
- [[Bank Reconciliation Report|UseCases/GeneratingReports#bank-reconcilation]]: FIXME
- [[Chart of Accounts|UseCases/GeneratingReports#chart-of-accounts]]: FIXME
- [[Cash Disbursements Journal|UseCases/GeneratingReports#cash-disbursements]]: FIXME
- [[Income Report|UseCases/GeneratingReports#income-report]]: FIXME
- [[Expense Report|UseCases/GeneratingReports#expense-report]]: FIXME
-->

### Evaluation of [[Fund Accounting|UseCases/FundAccounting]] UseCases

See above.
<!--
- [[Fund-only View|UseCases/FundAccounting#fund-view]]
- [[Funds as part of whole org View|UseCases/FundAccounting#fundless-view]]
- [[Ignore Funds for operations|UseCases/FundAccounting#fundless-view]]
-->

### [[UseCases/Collaborating]] evaluation
- [[Simultaneous Editing of Ledger|UseCases/Collaborating#simultaneous-ledger-edits]]: FIXME
- FIXME: Other uses cases need rewrite.

### Evaluation of [[Double-entry Accounting|UseCases/DoubleEntryAccounting]] UseCases

- Does the system implement pure double-entry accounting?

### Evaluation of [[TrackingDocumentation|UseCases/TrackingDocumentation]] UseCases

- Does the system [[link up to external documentation|UseCases/TrackingDocumentation#document-link-up]]?

- Does it have a [[the ability to explore transactions via documentation linkage|UseCases/TrackingDocumentation#document-link-explore]]?

### Evaluation of [[Handling multiple currencies|UseCases/MultiCurrency]] UseCases

- Does it support the concept of
  [[a single functional currency|UseCases/MultiCurrency]], while still
  permitting multi-currency entries?

### Evaluation of [[draft transaction|UseCases/DraftTransactions]] UseCases

- Does the system allow
  [[generally for draft transactions|UseCases/DraftTransactions#draft-general]]
  that can be later approved before officially being posted to the books? 

### Evaluation of WorkFlow UseCases
- Is a [[specific workflow dictated by the system|UseCases/WorkFlow#workflow-dictated]] ?
- Is a [[the workflow configurable|UseCases/WorkFlow#workflow-configurable]] ?
- [[Unaccrued Invoice|UseCases/WorkFlow#unaccrued-invioice]] ?

### Evaluation of the [[Reading and Reporting API|UseCases/ReadingAPI]]

FIXME: This is assessment of what the API for manipulating the accounting
data does, so I think it's tough to do it as a list of questions.

### Evaluation of the [[Storage API|UseCases/StorageAPI]]

FIXME: This is assessment of what the API for storing the accounting data
does, so I think it's tough to do it as a list of questions.

### Evaluation of the [[Community Health|UseCases/CommunityHealth]]
- Is the [[license both determined as Free Software by FSF and OSI-approved|USeCases/CommunityHealth#license-approved]]?
- Is the [[license GPL-compatible||UseCases/CommunityHealth#gpl-compatible]]?
- Does the project
  [[require assignment of copyright or a CLA to get code upstreamed|UseCases/CommunityHealth#no-cla-for-profit]]?
- How many
  [[active developers/companies contribute to the project||USeCases/CommunityHealth#dev-count]]?
     * If there aren't many, how hard would it be to take over the project if needed?
- Is there good [[developer documentation|UseCases/CommunityHealth#dev-docs]]?
- How easy it to [[engage as a developer with the community|UseCases/CommunityHealth#dev-welcoming]]?
